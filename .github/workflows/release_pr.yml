name: Release Pull Request

on:
  issue_comment:
    types: created

jobs:
  append_changelog:
    if: | 
      startsWith(github.event.comment.body, '/changelog') 
      && (contains(github.event.comment.author_association, 'MEMBER') 
          || contains(github.event.comment.author_association, 'OWNER')
          || contains(github.event.comment.author_association, 'COLLABORATOR'))
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set GitHub user
      run: |
        git config --local user.name "Alien Ike"
        git config --local user.email "arquillian-team@lists.jboss.org"        
    - uses: actions/github-script@0.9.0
      name: Checkout PR branch
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const { spawnSync } = require("child_process")

          const pr = await github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });

          const { status, stderr } = spawnSync(`git fetch origin pull/${pr.data.number}/head:${pr.data.head.ref} && git checkout ${pr.data.head.ref} && git push --set-upstream origin ${pr.data.head.ref}`, {shell: true});
          if (status != 0) {                 
              console.log(stderr.toString());
              core.setFailed(`Failed checking out PR branch. ${stderr.toString()}`);              
          }
    - uses: actions/github-script@0.9.0
      name: Notify
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          version = context.payload.comment.body.split(' ')[1]
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '⚙️ Generating changelog for `' + version + '`. It will be added to this PR.'
          });
    - uses: actions/github-script@0.9.0
      name: Validate
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          version = context.payload.comment.body.split(' ')[1]
                  
          const { spawnSync } = require("child_process");
          
          const { status, stderr } = spawnSync(`./scripts/validate.sh ${version}`, {shell: true});        
                             
          if (status != 0) {
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `🛑😭 ${stderr.toString()}`
              });
              core.setFailed(`Validation failed!`);
          }                
          
    - name: Generate changelog
      if: success()
      uses: actions/github-script@0.9.0
      env:
        GHC_GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          version = context.payload.comment.body.split(' ')[1]
                  
          const { spawnSync } = require("child_process");
  
          const { status, stderr } = spawnSync(`$(curl -sL http://git.io/install-ghc | bash -s -- --path-only)/ghc generate -r maistra/istio-workspace --format adoc >> docs/modules/ROOT/pages/release_notes/${version}.adoc`, {shell: true});
          
          if (status != 0) {
              github.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `🤦😭\n\n${stderr.toString()}`
              });
              core.setFailed(`Failed generating changelog`);
          } else {
            const { status, stderr, stdout } = spawnSync(`git add . && git commit -m"release: adds changelog for ${version}" && git push && git rev-parse --short HEAD`, {shell: true});
            if (status != 0) {
                github.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `🤦😭\n\n${error}\n\n${stderr.toString()}`
                });
                core.setFailed(`Failed commiting changelog`);
            } else {
               var lines = stdout.toString().match(/(.+)([^\s])/g);
               const commitHash = lines[lines.length -1];
               github.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `✅ Changelog added in ${commitHash} 🙌🙌🙌 `
               });
            }

          }

    - name: Comment about action failure
      if: failure()
      uses: actions/github-script@0.9.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '🤷 🤦 Failed generating changelog. Please check details in the GitHub action.'
          });
      
  prepare_release:
    if: | 
      startsWith(github.event.comment.body, '/release') 
      && (contains(github.event.comment.author_association, 'MEMBER') 
          || contains(github.event.comment.author_association, 'OWNER')
          || contains(github.event.comment.author_association, 'COLLABORATOR'))
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set GitHub user
      run: |
        git config --local user.name "Alien Ike"
        git config --local user.email "arquillian-team@lists.jboss.org"
    - uses: actions/github-script@0.9.0
      name: Checkout PR branch
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const { spawnSync } = require("child_process")

          const pr = await github.pulls.get({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.issue.number
          });

          const { status, stderr } = spawnSync(`git fetch origin pull/${pr.data.number}/head:${pr.data.head.ref} && git checkout ${pr.data.head.ref} && git push --set-upstream origin ${pr.data.head.ref}`, {shell: true});
          if (status != 0) {                 
              console.log(stderr.toString());
              core.setFailed(`Failed checking out PR branch. ${stderr.toString()}`);
          }
    - uses: actions/github-script@0.9.0
      name: Release commits
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          version = context.payload.comment.body.split(' ')[1]
                  
          const { spawnSync } = require("child_process");
          
          const {status, stderr} = spawnSync(`./scripts/release.sh -v ${version}`, {shell: true});
          if (status != 0) {
              github.issues.createComment({
                  issue_number: context.issue.number,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  body: `🛑😭 ${stderr.toString()}`
              });
              core.setFailed(`Release failed!`);
          } else {
              github.pulls.merge({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.issue.number,
                  merge_method: 'rebase'
              }).then(() => {
                  github.issues.createComment({
                      issue_number: context.issue.number,
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      body: `🎇 🎉 🎆 ${version} has been shipped! 🚀🚀🚀`
                  });
              }).catch((data) => {
                  github.issues.createComment({
                      issue_number: context.issue.number,
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      body: `🛑😭 ${data.message}`
                  });
                  core.setFailed(`Merge failed!`);
              });
          }
    
